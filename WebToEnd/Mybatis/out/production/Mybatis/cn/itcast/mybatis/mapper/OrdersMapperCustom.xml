<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.itcast.mybatis.mapper.OrdersMapperCustom">

    <select id="findOrdersUser" resultType="OrdersCustom">
        select orders.*, user.username, user.sex,user.address from orders, user where orders.user_id = user.id
    </select>

<!--    查询订单关联用户信息，使用resultMap-->
<!--    订单查询关联用户的resultMap-->
    <resultMap id="OrdersUserResultMap" type="Orders">
<!--        配置映射的订单信息，订单信息的唯一标识就是订单表中的id属性，如果有多个列组成唯一标识，那么就要配置多个id-->
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="number" property="number"/>
        <result column="createtime" property="createtime"/>
        <result column="note" property="note"/>
<!--        配置映射的关联的用户信息-->
<!--        association：用于映射关联查询单个对象的信息
            property：要将关联查询的用户信息映射到Orders中哪个属性
            javaType：映射到user的哪个属性-->
        <association property="user" javaType="User">
            <id column="user_id" property="id"/>
            <result column="username" property="username"/>
            <result column="sex" property="sex"/>
            <result column="address" property="address"/>
        </association>
    </resultMap>
    <select id="findOrdersUserResultMap" resultMap="OrdersUserResultMap">
        select orders.*, user.username, user.address from orders, user where orders.user_id = user.id
    </select>

<!--    查询订单以及订单明细的信息
        使用extends继承，不用在其中配置订单信息和用户信息的映射-->
    <resultMap id="OrdersAndOrderDetailsResultMap" type="Orders" extends="OrdersUserResultMap">
<!--        一个订单关联查询出了多条明细，所以要使用collection进行映射
            collection：对关联查询到多条记录映射到集合对象中
            property：将关联查询到多条记录映射到哪个属性
            ofType：指定映射到集合属性中pojo的类型-->
        <collection property="orderdetails" ofType="Orderdetail">
            <id column="orderdetail_id" property="id"/>
            <result column="id" property="ordersId"/>
            <result column="items_id" property="itemsId"/>
            <result column="items_num" property="itemsNum"/>
        </collection>
    </resultMap>
    <select id="findOrdersAndOrderDetailsResultMap" resultMap="OrdersAndOrderDetailsResultMap">
        select
            orders.*,
            user.username,
            user.sex,
            user.address,
            orderdetail.id orderdetail_id,
            orderdetail.items_id,
            orderdetail.items_num
        from
            orders,
            user,
            orderdetail
        where
            orders.user_id = user.id and orderdetail.orders_id = orders.id
    </select>

<!--    查询用户以及用户购买的商品信息-->
    <resultMap id="UsersAndUserItemsResultMap" type="User">
        <id column="user_id" property="id"/>
        <result column="username" property="username"/>
        <result column="sex" property="sex"/>
        <result column="address" property="address"/>
        <collection property="ordersList" ofType="Orders">
            <id column="id" property="id"/>
            <result column="user_id" property="userId"/>
            <result column="number" property="number"/>
            <result column="createtime" property="createtime"/>
            <result column="note" property="note"/>
            <collection property="orderdetails" ofType="Orderdetail">
                <id column="orderdetail_id" property="id"/>
                <result column="id" property="ordersId"/>
                <result column="items_id" property="itemsId"/>
                <result column="items_num" property="itemsNum"/>
                <association property="items" javaType="Items">
                    <id column="items_id" property="id"/>
                    <result column="items_name" property="name"/>
                    <result column="items_detail" property="detail"/>
                    <result column="items_price" property="price"/>
                </association>
            </collection>
        </collection>
    </resultMap>
    <select id="findUsersAndUserItemsResultMap" resultMap="UsersAndUserItemsResultMap">
        select
            orders.*,
            user.username,
            user.sex,
            user.address,
            orderdetail.id orderdetail_id,
            orderdetail.items_id,
            orderdetail.items_num,
            items.name items_name,
            items.detail items_detail,
            items.price items_price
        from
            user,
            items,
            orders,
            orderdetail
        where
            orders.user_id = user.id and orderdetail.orders_id = orders.id and orderdetail.items_id = items.id
    </select>

<!--    延迟加载resultMap-->
    <resultMap id="OrdersUserLazyLoadingResultMap" type="Orders">
<!--        对订单信息进行映射配置-->
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="number" property="number"/>
        <result column="createtime" property="createtime"/>
        <result column="note" property="note"/>
<!--        实现对用户信息进行延迟加载
            select：指定延迟加载需要执行的statement的id（是根据user_id查询用户信息的statement）
            要使用userMapper.xml中findUserById完成根据用户id(user_id)用户信息的查询
            column：订单信息中关联用户信息查询的列，是user_id-->
        <association property="user" javaType="User" select="cn.itcast.mybatis.mapper.UserMapper.findUserById" column="user_id">

        </association>
    </resultMap>
<!--    查询订单关联查询用户，用户信息需要延迟加载-->
    <select id="findOrdersUserLazyLoading" resultMap="OrdersUserLazyLoadingResultMap">
        select * from orders
    </select>
</mapper>
